{
	"compileOnSave": false,
	"exclude": ["node_modules"],
	"include": ["src"],
	"files": ["./node_modules/solid-scripts/types/solid-app.d.ts"],
	"compilerOptions": {
		"declaration": true /* Generates corresponding '.d.ts' file. */,
		"isolatedModules": true /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */,
		"jsx": "preserve" /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */,
		"lib": [
			"dom",
			"dom.iterable",
			"esnext"
		] /* Specify library files to be included in the compilation. */,
		"module": "esnext" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */,
		"noEmit": false /* Do not emit outputs. */,
		"outDir": "./dist/" /* Redirect output structure to the directory. */,
		"target": "ES5" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'. */,
		// "allowJs": true,                       /* Allow javascript files to be compiled. */
		// "checkJs": true,                       /* Report errors in .js files. */
		// "composite": true,                     /* Enable project compilation */
		// "declarationMap": true,                /* Generates a sourcemap for each corresponding '.d.ts' file. */
		// "downlevelIteration": true,            /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
		// "importHelpers": true,                 /* Import emit helpers from 'tslib'. */
		// "outFile": "./",                       /* Concatenate and emit output to single file. */
		// "removeComments": true,                /* Do not emit comments to output. */
		// "rootDir": "./",                       /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
		// "sourceMap": true,                     /* Generates corresponding '.map' file. */
		/* Strict Type-Checking Options */
		"noImplicitAny": true /* Raise error on expressions and declarations with an implied 'any' type. */,
		"strict": true /* Enable all strict type-checking options. */,
		// "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */
		// "noImplicitThis": true,                /* Raise error on 'this' expressions with an implied 'any' type. */
		// "strictFunctionTypes": true,           /* Enable strict checking of function types. */
		// "strictNullChecks": true,              /* Enable strict null checks. */
		// "strictPropertyInitialization": true,  /* Enable strict checking of property initialization in classes. */
		/* Additional Checks */
		"forceConsistentCasingInFileNames": true,
		"noFallthroughCasesInSwitch": true /* Report errors for fallthrough cases in switch statement. */,
		"noUnusedLocals": false /* Report errors on unused locals. */,
		"resolveJsonModule": true,
		// "noImplicitReturns": true,             /* Report error when not all code paths in function return a value. */
		// "noUnusedParameters": true,            /* Report errors on unused parameters. */
		// "skipLibCheck": true,
		/* Module Resolution Options */
		"allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */,
		"esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
		"moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
		// "baseUrl": "./",                       /* Base directory to resolve non-absolute module names. */
		// "paths": {},                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
		// "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */
		// "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
		"typeRoots": [
			"./@types",
			"./src/@types",
			"node_modules/@types"
		] /* List of folders to include type definitions from. */,
		// "types": [],                           /* Type declaration files to be included in compilation. */
		/* Source Map Options */
		// "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */
		// "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */
		// "mapRoot": "./",                       /* Specify the location where debugger should locate map files instead of generated locations. */
		// "sourceRoot": "./",                    /* Specify the location where debugger should locate TypeScript files instead of source locations. */
		/* Experimental Options */
		"experimentalDecorators": true /* Enables experimental support for ES7 decorators. */
		// "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */
		/* Advanced Options */
		// "declarationDir": "lib"                /* Output directory for generated declaration files. */
	}
}
